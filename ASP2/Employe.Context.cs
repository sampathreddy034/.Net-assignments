//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP2
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CaseStudyEntities1 : DbContext
    {
        public CaseStudyEntities1()
            : base("name=CaseStudyEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Course> Courses { get; set; }
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<Enrollment> Enrollments { get; set; }
        public virtual DbSet<StudentInfo> StudentInfoes { get; set; }
    
        public virtual int EmpInsert(Nullable<int> eid, string ename, Nullable<decimal> esal, string etype)
        {
            var eidParameter = eid.HasValue ?
                new ObjectParameter("Eid", eid) :
                new ObjectParameter("Eid", typeof(int));
    
            var enameParameter = ename != null ?
                new ObjectParameter("Ename", ename) :
                new ObjectParameter("Ename", typeof(string));
    
            var esalParameter = esal.HasValue ?
                new ObjectParameter("Esal", esal) :
                new ObjectParameter("Esal", typeof(decimal));
    
            var etypeParameter = etype != null ?
                new ObjectParameter("Etype", etype) :
                new ObjectParameter("Etype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EmpInsert", eidParameter, enameParameter, esalParameter, etypeParameter);
        }
    
        public virtual ObjectResult<GetSalaryById_Result> GetSalaryById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSalaryById_Result>("GetSalaryById", idParameter);
        }
    }
}
